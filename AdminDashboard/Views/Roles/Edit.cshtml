@model EditRoleVM
@{
	ViewData["Title"] = "Edit";
}

<h1 class="text-center">
	Edit <span class="text-warning fw-bold">
		@Model.RoleName
	</span>
	?
</h1>
<form asp-action="Edit" method="post">
	<div class="text-danger" asp-validation-summary="ModelOnly"></div>

	<div class="form-group">
		<label class="form-label" asp-for="RoleId"></label>
		<input readonly class="form-control" asp-for="RoleId" />
	</div>

	<br />

	<div class="form-group">
		<label class="form-label" asp-for="RoleName"></label>
		<input class="form-control" asp-for="RoleName" />
		<span class="text-danger" asp-validation-for="RoleName"></span>
	</div>

	<br />

	@if (Model.Permissions.Count > 0)
	{
		<h3 class="text-center">Permissions</h3>
		<table class="table table-striped table-bordered w-75 mx-auto my-4">
			<thead class="bg-warning text-center fw-bold">
				<tr>
					<td>Check/Uncheck</td>
					<td>Module</td>
					<td>Permission</td>
				</tr>
			</thead>

			<tbody class="text-center">
				@for (int i = 0; i < Model.Permissions.Count; i++)
				{
					var currentPermission = Model.Permissions[i].DisplayValue.Split('.');
					<tr>
						<td>
							<div>
								<input class="form-check-input" asp-for="Permissions[i].IsSelected" />
								<input type="hidden" asp-for="Permissions[i].DisplayValue"/>
							</div>
						</td>

						<td>
							@currentPermission[1]
						</td>

						<td>
							@currentPermission[2]
						</td>
					</tr>
				}
			</tbody>
		</table>
	}

	<div>
		<input class="btn btn-warning" type="submit" value="Save" />|
		<a class="btn btn-light" asp-action="Index">Cancel</a>
	</div>
</form>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}

